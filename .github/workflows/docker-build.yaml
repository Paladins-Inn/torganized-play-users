---
name: Create OCI and publish to Quay

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  push:
    branches:
    - 'main'
    paths-ignore:
    - '.github/ISSUE_TEMPLATE/**'
    - .github/dependabot.yml
    - 'src/main/helm/**'
    - 'src/main/kubernetes/**'
    - CODE_OF_CONDUCT.md
    - CONTRIBUTING.md
    - 'KES Corporate Contributor License Agreement (2019-12-31).pdf'
    - LICENSE
    - README.md
    - SECURITY.md
  workflow_dispatch:

# Defines two custom environment variables for the workflow. These are used for the Container registry users, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: quay.io
  IMAGE_NAME: paladinsinn/dcis/dcis-users

jobs:
  build-app:
    name: Build spring-boot app
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        id: setup-java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: maven

      - name: Set up Maven
        id: setup-maven
        uses: s4u/maven-settings-action@v3.0.0
        with:
          servers: |
            [
              { "id": "nvdApi", "username": "klenkes74", "password": "${{ secrets.NVD_API_KEY }}"},
              { "id": "torganized-play-commons", "username": "${{ secrets.ARTIFACTSTORE_USER }}", "password": "${{ secrets.ARTIFACTSTORE_PASSWORD }}"}
            ]

      - name: Compile stuff
        id: build-java
        run: mvn package --batch-mode --no-transfer-progress
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare Artifacts
        run: |
          mkdir -p java-artifacts/target
          cp -a target/app.jar java-artifacts/target/
          cp -a Dockerfile .dockerignore pom.xml java-artifacts

      - name: Store result
        uses: actions/upload-artifact@master
        with:
          name: java-artifacts
          path: java-artifacts

  publish-quay:
    name: Create and Publish OCI Container
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    needs: build-app
    steps:
      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_ORG_USER }}
          password: ${{ secrets.QUAY_ORG_TOKEN }}

      - name: Retrieve Artifacts
        uses: actions/download-artifact@master
        with:
          name: java-artifacts
          path: .

      - name: Set Release version env variable
        run: |
          echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}:${{ env.RELEASE_VERSION }}
          outputs: type=image,name=target
